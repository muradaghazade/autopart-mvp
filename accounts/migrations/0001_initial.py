# Generated by Django 4.2.7 on 2023-11-20 08:33

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Offer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('color', models.CharField(max_length=300, null=True, verbose_name='color')),
                ('price', models.DecimalField(decimal_places=2, max_digits=6, verbose_name='Price')),
                ('condition', models.CharField(max_length=300, null=True, verbose_name='condition')),
                ('makes', models.CharField(max_length=300, null=True, verbose_name='makes')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'verbose_name': 'Offer',
                'verbose_name_plural': 'Offers',
            },
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model', models.CharField(max_length=300, null=True, verbose_name='model')),
                ('user', models.CharField(max_length=300, null=True, verbose_name='user')),
                ('year', models.IntegerField(blank=True, default=0, null=True)),
                ('body_type', models.CharField(max_length=300, null=True, verbose_name='body_type')),
                ('color', models.CharField(max_length=300, null=True, verbose_name='color')),
                ('transmission', models.CharField(max_length=300, null=True, verbose_name='transmission')),
                ('engine', models.CharField(max_length=300, null=True, verbose_name='engine')),
                ('country', models.CharField(max_length=300, null=True, verbose_name='country')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Request',
                'verbose_name_plural': 'Requests',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('full_name', models.CharField(max_length=300, null=True, verbose_name='full_name')),
                ('email', models.CharField(max_length=300, null=True, verbose_name='email')),
                ('number', models.IntegerField(blank=True, default=0, null=True)),
                ('password', models.CharField(max_length=300, null=True, verbose_name='password')),
                ('is_store', models.BooleanField(default=True)),
                ('description', models.CharField(max_length=300, null=True, verbose_name='description')),
                ('adress', models.CharField(max_length=300, null=True, verbose_name='adress')),
                ('map_link', models.CharField(max_length=300, null=True, verbose_name='map_link')),
                ('image', models.ImageField(blank=True, null=True, upload_to='banners/', verbose_name='Image')),
                ('makes', models.CharField(max_length=300, null=True, verbose_name='makes')),
                ('slug', models.SlugField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
